@page "/"
@using Grpc.Net.Client
@using Google.Protobuf
@using ServiceHotline

<PageTitle>Служба поддержки</PageTitle>
<div class="container-sm " style="font-family:Caveat;font-size:20pt">
    <div class="row text-center">
        <h1>Добро пожаловать на сайт службы поддержки людей в кризисной ситуации</h1>
    </div>
    <div class="row text-center">
        <p>Пожалуйста, опишите свою проблему, а наш консультант проведет с вами беседу.</p>
        
    </div>
    @if (errorMes != null)
    {
        <div class="row">
            @errorMes
        </div>
    }
    else
    {
        <div class="container" style="border:4px solid;border-radius:50px;border-color:papayawhip; padding:20px">
            <div class="row align-items-sm-start">
                <div class="row">
                    <p style="margin:0;colo">Консультант службы поддержки</p>
                </div>
                <div class="row" >
                    <div class="col-sm-1" style="display:flex; align-items:end">
                        <div style="display: flex;border: 5px solid; border-color:burlywood; height: 84.292px;width: 84.292px;border-radius: 50%;overflow: hidden;justify-content: center;">
                            <img src="assistant.png" style="width:70px;">
                        </div>
                    </div>
                    <div class="col-sm-11" style="display:flex; align-items:center;">
                        <div style="border: 5px solid;border-radius:50px;border-color:burlywood;padding:35px;background-color:papayawhip">
                            <p style="margin:0;word-break:break-all">hhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjfhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhgghjvhjfjfjhfjfjfjfjf</p>
                        </div>
                    </div>
                </div>
                
            </div>
            <div class="row" >
                <div class="row" >
                    <p>Вы</p>
                </div>
                <div class="row">
                    <div class="col-sm-11">
                        <div class="row">
                            <input type="text" style="border: 5px solid;border-radius:50px;border-color:burlywood;padding:35px;background-color:papayawhip" @bind-value="@problem" placeholder="Опишите вашу проблему" />
                        </div> 
                    </div>
                    <div class="col-sm-1" style="display:flex; align-items:end">
                        <div style="display: flex;border: 5px solid; border-color:burlywood;height: 84.292px;width: 84.292px;border-radius: 50%;overflow: hidden;justify-content: center;">
                            <img src="user.png" style="width:70px;">
                        </div>
                    </div>
                    <div class="row" style="display:flex;justify-content:center;margin-top:30px">
                        <button type="submit" style="display: flex;border: 5px solid; border-color:burlywood; border-radius:50px;width:300px;overflow:hidden;background-color:papayawhip;justify-content: center;" @* @onclick="" *@>Отправить</button>
                    </div>
                </div>
            </div>

        
        </div>
    }

</div>




@code{
    
    string problem { get; set; } = "fefrr";
    string errorMes { get; set; }
    string answer { get; set; } = "rgrgrg";
    // async void SayProblemSample()
    // {
    //     try
    //     {
    //         var channel = GrpcChannel.ForAddress("http://localhost:5169", new GrpcChannelOptions
    //             {
    //                 HttpHandler = new SocketsHttpHandler
    //                 {
    //                     KeepAlivePingDelay = TimeSpan.FromSeconds(30),
    //                     PooledConnectionIdleTimeout = Timeout.InfiniteTimeSpan
    //                 }
    //             });



    //         var clientAssistant = Assistant.AssistantClient(channel);
    //     }
    //     catch(Exception ex)
    //     {
    //         errorMes = ex.Message;
    //     }

    // }
}

